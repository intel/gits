// ===================== begin_copyright_notice ============================
//
// Copyright (C) 2023-2025 Intel Corporation
//
// SPDX-License-Identifier: MIT
//
// ===================== end_copyright_notice ==============================

#include "exception.h"
#include "vulkanTools_lite.h"

#include <cmath>

namespace gits {
namespace Vulkan {

uint32_t getFormatBytesPerPixel(VkFormat format) {
  switch (format) {
  case VK_FORMAT_R64G64B64A64_SFLOAT:
  case VK_FORMAT_R64G64B64A64_SINT:
  case VK_FORMAT_R64G64B64A64_UINT:
    return 32;
  case VK_FORMAT_R64G64B64_SFLOAT:
  case VK_FORMAT_R64G64B64_SINT:
  case VK_FORMAT_R64G64B64_UINT:
    return 24;
  case VK_FORMAT_R32G32B32A32_SFLOAT:
  case VK_FORMAT_R32G32B32A32_SINT:
  case VK_FORMAT_R32G32B32A32_UINT:
  case VK_FORMAT_R64G64_SFLOAT:
  case VK_FORMAT_R64G64_SINT:
  case VK_FORMAT_R64G64_UINT:
    return 16;
  case VK_FORMAT_R32G32B32_SFLOAT:
  case VK_FORMAT_R32G32B32_SINT:
  case VK_FORMAT_R32G32B32_UINT:
    return 12;
  case VK_FORMAT_R16G16B16A16_SFLOAT:
  case VK_FORMAT_R16G16B16A16_SINT:
  case VK_FORMAT_R16G16B16A16_SNORM:
  case VK_FORMAT_R16G16B16A16_SSCALED:
  case VK_FORMAT_R16G16B16A16_UINT:
  case VK_FORMAT_R16G16B16A16_UNORM:
  case VK_FORMAT_R16G16B16A16_USCALED:
  case VK_FORMAT_R32G32_SFLOAT:
  case VK_FORMAT_R32G32_SINT:
  case VK_FORMAT_R32G32_UINT:
  case VK_FORMAT_R64_SFLOAT:
  case VK_FORMAT_R64_SINT:
  case VK_FORMAT_R64_UINT:
    return 8;
  case VK_FORMAT_R16G16B16_SFLOAT:
  case VK_FORMAT_R16G16B16_SINT:
  case VK_FORMAT_R16G16B16_SNORM:
  case VK_FORMAT_R16G16B16_SSCALED:
  case VK_FORMAT_R16G16B16_UINT:
  case VK_FORMAT_R16G16B16_UNORM:
  case VK_FORMAT_R16G16B16_USCALED:
    return 6;
  case VK_FORMAT_D32_SFLOAT_S8_UINT:
    return 5;
  case VK_FORMAT_A2B10G10R10_SINT_PACK32:
  case VK_FORMAT_A2B10G10R10_SNORM_PACK32:
  case VK_FORMAT_A2B10G10R10_SSCALED_PACK32:
  case VK_FORMAT_A2B10G10R10_UINT_PACK32:
  case VK_FORMAT_A2B10G10R10_UNORM_PACK32:
  case VK_FORMAT_A2B10G10R10_USCALED_PACK32:
  case VK_FORMAT_A2R10G10B10_SINT_PACK32:
  case VK_FORMAT_A2R10G10B10_SNORM_PACK32:
  case VK_FORMAT_A2R10G10B10_SSCALED_PACK32:
  case VK_FORMAT_A2R10G10B10_UINT_PACK32:
  case VK_FORMAT_A2R10G10B10_UNORM_PACK32:
  case VK_FORMAT_A2R10G10B10_USCALED_PACK32:
  case VK_FORMAT_A8B8G8R8_SINT_PACK32:
  case VK_FORMAT_A8B8G8R8_SNORM_PACK32:
  case VK_FORMAT_A8B8G8R8_SRGB_PACK32:
  case VK_FORMAT_A8B8G8R8_SSCALED_PACK32:
  case VK_FORMAT_A8B8G8R8_UINT_PACK32:
  case VK_FORMAT_A8B8G8R8_UNORM_PACK32:
  case VK_FORMAT_A8B8G8R8_USCALED_PACK32:
  case VK_FORMAT_B10G11R11_UFLOAT_PACK32:
  case VK_FORMAT_E5B9G9R9_UFLOAT_PACK32:
  case VK_FORMAT_R8G8B8A8_SINT:
  case VK_FORMAT_R8G8B8A8_SNORM:
  case VK_FORMAT_R8G8B8A8_SRGB:
  case VK_FORMAT_R8G8B8A8_SSCALED:
  case VK_FORMAT_R8G8B8A8_UINT:
  case VK_FORMAT_R8G8B8A8_UNORM:
  case VK_FORMAT_R8G8B8A8_USCALED:
  case VK_FORMAT_B8G8R8A8_SINT:
  case VK_FORMAT_B8G8R8A8_SNORM:
  case VK_FORMAT_B8G8R8A8_SRGB:
  case VK_FORMAT_B8G8R8A8_SSCALED:
  case VK_FORMAT_B8G8R8A8_UINT:
  case VK_FORMAT_B8G8R8A8_UNORM:
  case VK_FORMAT_B8G8R8A8_USCALED:
  case VK_FORMAT_R16G16_SFLOAT:
  case VK_FORMAT_R16G16_SINT:
  case VK_FORMAT_R16G16_SNORM:
  case VK_FORMAT_R16G16_SSCALED:
  case VK_FORMAT_R16G16_UINT:
  case VK_FORMAT_R16G16_UNORM:
  case VK_FORMAT_R16G16_USCALED:
  case VK_FORMAT_R32_SFLOAT:
  case VK_FORMAT_R32_SINT:
  case VK_FORMAT_R32_UINT:
  case VK_FORMAT_D24_UNORM_S8_UINT:
  case VK_FORMAT_X8_D24_UNORM_PACK32:
  case VK_FORMAT_D32_SFLOAT:
    return 4;
  case VK_FORMAT_B8G8R8_SINT:
  case VK_FORMAT_B8G8R8_SNORM:
  case VK_FORMAT_B8G8R8_SRGB:
  case VK_FORMAT_B8G8R8_SSCALED:
  case VK_FORMAT_B8G8R8_UINT:
  case VK_FORMAT_B8G8R8_UNORM:
  case VK_FORMAT_B8G8R8_USCALED:
  case VK_FORMAT_R8G8B8_SINT:
  case VK_FORMAT_R8G8B8_SNORM:
  case VK_FORMAT_R8G8B8_SRGB:
  case VK_FORMAT_R8G8B8_SSCALED:
  case VK_FORMAT_R8G8B8_UINT:
  case VK_FORMAT_R8G8B8_UNORM:
  case VK_FORMAT_R8G8B8_USCALED:
  case VK_FORMAT_D16_UNORM_S8_UINT:
    return 3;
  case VK_FORMAT_B4G4R4A4_UNORM_PACK16:
  case VK_FORMAT_B5G5R5A1_UNORM_PACK16:
  case VK_FORMAT_B5G6R5_UNORM_PACK16:
  case VK_FORMAT_A1R5G5B5_UNORM_PACK16:
  case VK_FORMAT_R4G4B4A4_UNORM_PACK16:
  case VK_FORMAT_R5G5B5A1_UNORM_PACK16:
  case VK_FORMAT_R5G6B5_UNORM_PACK16:
  case VK_FORMAT_R8G8_SINT:
  case VK_FORMAT_R8G8_SNORM:
  case VK_FORMAT_R8G8_SRGB:
  case VK_FORMAT_R8G8_SSCALED:
  case VK_FORMAT_R8G8_UINT:
  case VK_FORMAT_R8G8_UNORM:
  case VK_FORMAT_R8G8_USCALED:
  case VK_FORMAT_R16_SFLOAT:
  case VK_FORMAT_R16_SINT:
  case VK_FORMAT_R16_SNORM:
  case VK_FORMAT_R16_SSCALED:
  case VK_FORMAT_R16_UINT:
  case VK_FORMAT_R16_UNORM:
  case VK_FORMAT_R16_USCALED:
  case VK_FORMAT_D16_UNORM:
  case VK_FORMAT_A4B4G4R4_UNORM_PACK16:
  case VK_FORMAT_A4R4G4B4_UNORM_PACK16:
    return 2;
  case VK_FORMAT_R4G4_UNORM_PACK8:
  case VK_FORMAT_R8_SINT:
  case VK_FORMAT_R8_SNORM:
  case VK_FORMAT_R8_SRGB:
  case VK_FORMAT_R8_SSCALED:
  case VK_FORMAT_R8_UINT:
  case VK_FORMAT_R8_UNORM:
  case VK_FORMAT_R8_USCALED:
  case VK_FORMAT_S8_UINT:
  case VK_FORMAT_CUSTOM_A8_UNORM_GITS:
    return 1;
    //case VK_FORMAT_ASTC_10x10_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_10x10_UNORM_BLOCK:
    //case VK_FORMAT_ASTC_10x5_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_10x5_UNORM_BLOCK:
    //case VK_FORMAT_ASTC_10x6_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_10x6_UNORM_BLOCK:
    //case VK_FORMAT_ASTC_10x8_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_10x8_UNORM_BLOCK:
    //case VK_FORMAT_ASTC_12x10_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_12x10_UNORM_BLOCK:
    //case VK_FORMAT_ASTC_12x12_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_12x12_UNORM_BLOCK:
    //case VK_FORMAT_ASTC_4x4_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_4x4_UNORM_BLOCK:
    //case VK_FORMAT_ASTC_5x4_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_5x4_UNORM_BLOCK:
    //case VK_FORMAT_ASTC_5x5_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_5x5_UNORM_BLOCK:
    //case VK_FORMAT_ASTC_6x5_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_6x5_UNORM_BLOCK:
    //case VK_FORMAT_ASTC_6x6_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_6x6_UNORM_BLOCK:
    //case VK_FORMAT_ASTC_8x5_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_8x5_UNORM_BLOCK:
    //case VK_FORMAT_ASTC_8x6_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_8x6_UNORM_BLOCK:
    //case VK_FORMAT_ASTC_8x8_SRGB_BLOCK:
    //case VK_FORMAT_ASTC_8x8_UNORM_BLOCK:
    //case VK_FORMAT_BC1_RGBA_SRGB_BLOCK:
    //case VK_FORMAT_BC1_RGBA_UNORM_BLOCK:
    //case VK_FORMAT_BC1_RGB_SRGB_BLOCK:
    //case VK_FORMAT_BC1_RGB_UNORM_BLOCK:
    //case VK_FORMAT_BC2_SRGB_BLOCK:
    //case VK_FORMAT_BC2_UNORM_BLOCK:
    //case VK_FORMAT_BC3_SRGB_BLOCK:
    //case VK_FORMAT_BC3_UNORM_BLOCK:
    //case VK_FORMAT_BC4_SNORM_BLOCK:
    //case VK_FORMAT_BC4_UNORM_BLOCK:
    //case VK_FORMAT_BC5_SNORM_BLOCK:
    //case VK_FORMAT_BC5_UNORM_BLOCK:
    //case VK_FORMAT_BC6H_SFLOAT_BLOCK:
    //case VK_FORMAT_BC6H_UFLOAT_BLOCK:
    //case VK_FORMAT_BC7_SRGB_BLOCK:
    //case VK_FORMAT_BC7_UNORM_BLOCK:
    //case VK_FORMAT_EAC_R11G11_SNORM_BLOCK:
    //case VK_FORMAT_EAC_R11G11_UNORM_BLOCK:
    //case VK_FORMAT_EAC_R11_SNORM_BLOCK:
    //case VK_FORMAT_EAC_R11_UNORM_BLOCK:
    //case VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK:
    //case VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK:
    //case VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK:
    //case VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK:
    //case VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK:
    //case VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK:
    //case VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG:
    //case VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG:
    //case VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG:
    //case VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG:
    //case VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG:
    //case VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG:
    //case VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG:
    //case VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG:
  default:
    throw ENotSupported(EXCEPTION_MESSAGE);
  }
}

uint32_t getFormatNumBlocks(VkFormat format, VkExtent3D size) {
  switch (format) {
  case VK_FORMAT_R64G64B64A64_SFLOAT:
  case VK_FORMAT_R64G64B64A64_SINT:
  case VK_FORMAT_R64G64B64A64_UINT:
  case VK_FORMAT_R64G64B64_SFLOAT:
  case VK_FORMAT_R64G64B64_SINT:
  case VK_FORMAT_R64G64B64_UINT:
  case VK_FORMAT_R32G32B32A32_SFLOAT:
  case VK_FORMAT_R32G32B32A32_SINT:
  case VK_FORMAT_R32G32B32A32_UINT:
  case VK_FORMAT_R64G64_SFLOAT:
  case VK_FORMAT_R64G64_SINT:
  case VK_FORMAT_R64G64_UINT:
  case VK_FORMAT_R32G32B32_SFLOAT:
  case VK_FORMAT_R32G32B32_SINT:
  case VK_FORMAT_R32G32B32_UINT:
  case VK_FORMAT_R16G16B16A16_SFLOAT:
  case VK_FORMAT_R16G16B16A16_SINT:
  case VK_FORMAT_R16G16B16A16_SNORM:
  case VK_FORMAT_R16G16B16A16_SSCALED:
  case VK_FORMAT_R16G16B16A16_UINT:
  case VK_FORMAT_R16G16B16A16_UNORM:
  case VK_FORMAT_R16G16B16A16_USCALED:
  case VK_FORMAT_R32G32_SFLOAT:
  case VK_FORMAT_R32G32_SINT:
  case VK_FORMAT_R32G32_UINT:
  case VK_FORMAT_R64_SFLOAT:
  case VK_FORMAT_R64_SINT:
  case VK_FORMAT_R64_UINT:
  case VK_FORMAT_R16G16B16_SFLOAT:
  case VK_FORMAT_R16G16B16_SINT:
  case VK_FORMAT_R16G16B16_SNORM:
  case VK_FORMAT_R16G16B16_SSCALED:
  case VK_FORMAT_R16G16B16_UINT:
  case VK_FORMAT_R16G16B16_UNORM:
  case VK_FORMAT_R16G16B16_USCALED:
  case VK_FORMAT_D32_SFLOAT_S8_UINT:
  case VK_FORMAT_A2B10G10R10_SINT_PACK32:
  case VK_FORMAT_A2B10G10R10_SNORM_PACK32:
  case VK_FORMAT_A2B10G10R10_SSCALED_PACK32:
  case VK_FORMAT_A2B10G10R10_UINT_PACK32:
  case VK_FORMAT_A2B10G10R10_UNORM_PACK32:
  case VK_FORMAT_A2B10G10R10_USCALED_PACK32:
  case VK_FORMAT_A2R10G10B10_SINT_PACK32:
  case VK_FORMAT_A2R10G10B10_SNORM_PACK32:
  case VK_FORMAT_A2R10G10B10_SSCALED_PACK32:
  case VK_FORMAT_A2R10G10B10_UINT_PACK32:
  case VK_FORMAT_A2R10G10B10_UNORM_PACK32:
  case VK_FORMAT_A2R10G10B10_USCALED_PACK32:
  case VK_FORMAT_A8B8G8R8_SINT_PACK32:
  case VK_FORMAT_A8B8G8R8_SNORM_PACK32:
  case VK_FORMAT_A8B8G8R8_SRGB_PACK32:
  case VK_FORMAT_A8B8G8R8_SSCALED_PACK32:
  case VK_FORMAT_A8B8G8R8_UINT_PACK32:
  case VK_FORMAT_A8B8G8R8_UNORM_PACK32:
  case VK_FORMAT_A8B8G8R8_USCALED_PACK32:
  case VK_FORMAT_B10G11R11_UFLOAT_PACK32:
  case VK_FORMAT_E5B9G9R9_UFLOAT_PACK32:
  case VK_FORMAT_R8G8B8A8_SINT:
  case VK_FORMAT_R8G8B8A8_SNORM:
  case VK_FORMAT_R8G8B8A8_SRGB:
  case VK_FORMAT_R8G8B8A8_SSCALED:
  case VK_FORMAT_R8G8B8A8_UINT:
  case VK_FORMAT_R8G8B8A8_UNORM:
  case VK_FORMAT_R8G8B8A8_USCALED:
  case VK_FORMAT_B8G8R8A8_SINT:
  case VK_FORMAT_B8G8R8A8_SNORM:
  case VK_FORMAT_B8G8R8A8_SRGB:
  case VK_FORMAT_B8G8R8A8_SSCALED:
  case VK_FORMAT_B8G8R8A8_UINT:
  case VK_FORMAT_B8G8R8A8_UNORM:
  case VK_FORMAT_B8G8R8A8_USCALED:
  case VK_FORMAT_R16G16_SFLOAT:
  case VK_FORMAT_R16G16_SINT:
  case VK_FORMAT_R16G16_SNORM:
  case VK_FORMAT_R16G16_SSCALED:
  case VK_FORMAT_R16G16_UINT:
  case VK_FORMAT_R16G16_UNORM:
  case VK_FORMAT_R16G16_USCALED:
  case VK_FORMAT_R32_SFLOAT:
  case VK_FORMAT_R32_SINT:
  case VK_FORMAT_R32_UINT:
  case VK_FORMAT_D24_UNORM_S8_UINT:
  case VK_FORMAT_X8_D24_UNORM_PACK32:
  case VK_FORMAT_D32_SFLOAT:
  case VK_FORMAT_B8G8R8_SINT:
  case VK_FORMAT_B8G8R8_SNORM:
  case VK_FORMAT_B8G8R8_SRGB:
  case VK_FORMAT_B8G8R8_SSCALED:
  case VK_FORMAT_B8G8R8_UINT:
  case VK_FORMAT_B8G8R8_UNORM:
  case VK_FORMAT_B8G8R8_USCALED:
  case VK_FORMAT_R8G8B8_SINT:
  case VK_FORMAT_R8G8B8_SNORM:
  case VK_FORMAT_R8G8B8_SRGB:
  case VK_FORMAT_R8G8B8_SSCALED:
  case VK_FORMAT_R8G8B8_UINT:
  case VK_FORMAT_R8G8B8_UNORM:
  case VK_FORMAT_R8G8B8_USCALED:
  case VK_FORMAT_D16_UNORM_S8_UINT:
  case VK_FORMAT_B4G4R4A4_UNORM_PACK16:
  case VK_FORMAT_B5G5R5A1_UNORM_PACK16:
  case VK_FORMAT_B5G6R5_UNORM_PACK16:
  case VK_FORMAT_A1R5G5B5_UNORM_PACK16:
  case VK_FORMAT_R4G4B4A4_UNORM_PACK16:
  case VK_FORMAT_R5G5B5A1_UNORM_PACK16:
  case VK_FORMAT_R5G6B5_UNORM_PACK16:
  case VK_FORMAT_R8G8_SINT:
  case VK_FORMAT_R8G8_SNORM:
  case VK_FORMAT_R8G8_SRGB:
  case VK_FORMAT_R8G8_SSCALED:
  case VK_FORMAT_R8G8_UINT:
  case VK_FORMAT_R8G8_UNORM:
  case VK_FORMAT_R8G8_USCALED:
  case VK_FORMAT_R16_SFLOAT:
  case VK_FORMAT_R16_SINT:
  case VK_FORMAT_R16_SNORM:
  case VK_FORMAT_R16_SSCALED:
  case VK_FORMAT_R16_UINT:
  case VK_FORMAT_R16_UNORM:
  case VK_FORMAT_R16_USCALED:
  case VK_FORMAT_D16_UNORM:
  case VK_FORMAT_R4G4_UNORM_PACK8:
  case VK_FORMAT_R8_SINT:
  case VK_FORMAT_R8_SNORM:
  case VK_FORMAT_R8_SRGB:
  case VK_FORMAT_R8_SSCALED:
  case VK_FORMAT_R8_UINT:
  case VK_FORMAT_R8_UNORM:
  case VK_FORMAT_R8_USCALED:
  case VK_FORMAT_S8_UINT:
  case VK_FORMAT_A4B4G4R4_UNORM_PACK16:
  case VK_FORMAT_A4R4G4B4_UNORM_PACK16:
  case VK_FORMAT_CUSTOM_A8_UNORM_GITS:
    return size.width * size.height * size.depth;
  case VK_FORMAT_ASTC_10x10_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x10_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 10.0f) * (uint32_t)std::ceil(size.height / 10.0f) *
           size.depth;
  case VK_FORMAT_ASTC_10x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x5_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 10.0f) * (uint32_t)std::ceil(size.height / 5.0f) *
           size.depth;
  case VK_FORMAT_ASTC_10x6_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x6_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 10.0f) * (uint32_t)std::ceil(size.height / 6.0f) *
           size.depth;
  case VK_FORMAT_ASTC_10x8_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x8_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 10.0f) * (uint32_t)std::ceil(size.height / 8.0f) *
           size.depth;
  case VK_FORMAT_ASTC_12x10_SRGB_BLOCK:
  case VK_FORMAT_ASTC_12x10_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 12.0f) * (uint32_t)std::ceil(size.height / 10.0f) *
           size.depth;
  case VK_FORMAT_ASTC_12x12_SRGB_BLOCK:
  case VK_FORMAT_ASTC_12x12_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 12.0f) * (uint32_t)std::ceil(size.height / 12.0f) *
           size.depth;
  case VK_FORMAT_ASTC_4x4_SRGB_BLOCK:
  case VK_FORMAT_ASTC_4x4_UNORM_BLOCK:
  case VK_FORMAT_BC1_RGBA_SRGB_BLOCK:
  case VK_FORMAT_BC1_RGBA_UNORM_BLOCK:
  case VK_FORMAT_BC1_RGB_SRGB_BLOCK:
  case VK_FORMAT_BC1_RGB_UNORM_BLOCK:
  case VK_FORMAT_BC2_SRGB_BLOCK:
  case VK_FORMAT_BC2_UNORM_BLOCK:
  case VK_FORMAT_BC3_SRGB_BLOCK:
  case VK_FORMAT_BC3_UNORM_BLOCK:
  case VK_FORMAT_BC4_SNORM_BLOCK:
  case VK_FORMAT_BC4_UNORM_BLOCK:
  case VK_FORMAT_BC5_SNORM_BLOCK:
  case VK_FORMAT_BC5_UNORM_BLOCK:
  case VK_FORMAT_BC6H_SFLOAT_BLOCK:
  case VK_FORMAT_BC6H_UFLOAT_BLOCK:
  case VK_FORMAT_BC7_SRGB_BLOCK:
  case VK_FORMAT_BC7_UNORM_BLOCK:
  case VK_FORMAT_EAC_R11G11_SNORM_BLOCK:
  case VK_FORMAT_EAC_R11G11_UNORM_BLOCK:
  case VK_FORMAT_EAC_R11_SNORM_BLOCK:
  case VK_FORMAT_EAC_R11_UNORM_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 4.0f) * (uint32_t)std::ceil(size.height / 4.0f) *
           size.depth;
  case VK_FORMAT_ASTC_5x4_SRGB_BLOCK:
  case VK_FORMAT_ASTC_5x4_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 5.0f) * (uint32_t)std::ceil(size.height / 4.0f) *
           size.depth;
  case VK_FORMAT_ASTC_5x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_5x5_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 5.0f) * (uint32_t)std::ceil(size.height / 5.0f) *
           size.depth;
  case VK_FORMAT_ASTC_6x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_6x5_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 6.0f) * (uint32_t)std::ceil(size.height / 5.0f) *
           size.depth;
  case VK_FORMAT_ASTC_6x6_SRGB_BLOCK:
  case VK_FORMAT_ASTC_6x6_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 6.0f) * (uint32_t)std::ceil(size.height / 6.0f) *
           size.depth;
  case VK_FORMAT_ASTC_8x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_8x5_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 8.0f) * (uint32_t)std::ceil(size.height / 5.0f) *
           size.depth;
  case VK_FORMAT_ASTC_8x6_SRGB_BLOCK:
  case VK_FORMAT_ASTC_8x6_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 8.0f) * (uint32_t)std::ceil(size.height / 6.0f) *
           size.depth;
  case VK_FORMAT_ASTC_8x8_SRGB_BLOCK:
  case VK_FORMAT_ASTC_8x8_UNORM_BLOCK:
    return (uint32_t)std::ceil(size.width / 8.0f) * (uint32_t)std::ceil(size.height / 8.0f) *
           size.depth;
  case VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG:
  case VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG:
  default:
    throw ENotSupported(EXCEPTION_MESSAGE);
  }
}

uint32_t getFormatDataSize(VkFormat format, VkExtent3D size) {
  switch (format) {
  case VK_FORMAT_R64G64B64A64_SFLOAT:
  case VK_FORMAT_R64G64B64A64_SINT:
  case VK_FORMAT_R64G64B64A64_UINT:
    return 32 * size.width * size.height * size.depth;
  case VK_FORMAT_R64G64B64_SFLOAT:
  case VK_FORMAT_R64G64B64_SINT:
  case VK_FORMAT_R64G64B64_UINT:
    return 24 * size.width * size.height * size.depth;
  case VK_FORMAT_R32G32B32A32_SFLOAT:
  case VK_FORMAT_R32G32B32A32_SINT:
  case VK_FORMAT_R32G32B32A32_UINT:
  case VK_FORMAT_R64G64_SFLOAT:
  case VK_FORMAT_R64G64_SINT:
  case VK_FORMAT_R64G64_UINT:
    return 16 * size.width * size.height * size.depth;
  case VK_FORMAT_R32G32B32_SFLOAT:
  case VK_FORMAT_R32G32B32_SINT:
  case VK_FORMAT_R32G32B32_UINT:
    return 12 * size.width * size.height * size.depth;
  case VK_FORMAT_R16G16B16A16_SFLOAT:
  case VK_FORMAT_R16G16B16A16_SINT:
  case VK_FORMAT_R16G16B16A16_SNORM:
  case VK_FORMAT_R16G16B16A16_SSCALED:
  case VK_FORMAT_R16G16B16A16_UINT:
  case VK_FORMAT_R16G16B16A16_UNORM:
  case VK_FORMAT_R16G16B16A16_USCALED:
  case VK_FORMAT_R32G32_SFLOAT:
  case VK_FORMAT_R32G32_SINT:
  case VK_FORMAT_R32G32_UINT:
  case VK_FORMAT_R64_SFLOAT:
  case VK_FORMAT_R64_SINT:
  case VK_FORMAT_R64_UINT:
    return 8 * size.width * size.height * size.depth;
  case VK_FORMAT_R16G16B16_SFLOAT:
  case VK_FORMAT_R16G16B16_SINT:
  case VK_FORMAT_R16G16B16_SNORM:
  case VK_FORMAT_R16G16B16_SSCALED:
  case VK_FORMAT_R16G16B16_UINT:
  case VK_FORMAT_R16G16B16_UNORM:
  case VK_FORMAT_R16G16B16_USCALED:
    return 6 * size.width * size.height * size.depth;
  case VK_FORMAT_D32_SFLOAT_S8_UINT:
    return 5 * size.width * size.height * size.depth;
  case VK_FORMAT_A2B10G10R10_SINT_PACK32:
  case VK_FORMAT_A2B10G10R10_SNORM_PACK32:
  case VK_FORMAT_A2B10G10R10_SSCALED_PACK32:
  case VK_FORMAT_A2B10G10R10_UINT_PACK32:
  case VK_FORMAT_A2B10G10R10_UNORM_PACK32:
  case VK_FORMAT_A2B10G10R10_USCALED_PACK32:
  case VK_FORMAT_A2R10G10B10_SINT_PACK32:
  case VK_FORMAT_A2R10G10B10_SNORM_PACK32:
  case VK_FORMAT_A2R10G10B10_SSCALED_PACK32:
  case VK_FORMAT_A2R10G10B10_UINT_PACK32:
  case VK_FORMAT_A2R10G10B10_UNORM_PACK32:
  case VK_FORMAT_A2R10G10B10_USCALED_PACK32:
  case VK_FORMAT_A8B8G8R8_SINT_PACK32:
  case VK_FORMAT_A8B8G8R8_SNORM_PACK32:
  case VK_FORMAT_A8B8G8R8_SRGB_PACK32:
  case VK_FORMAT_A8B8G8R8_SSCALED_PACK32:
  case VK_FORMAT_A8B8G8R8_UINT_PACK32:
  case VK_FORMAT_A8B8G8R8_UNORM_PACK32:
  case VK_FORMAT_A8B8G8R8_USCALED_PACK32:
  case VK_FORMAT_B10G11R11_UFLOAT_PACK32:
  case VK_FORMAT_E5B9G9R9_UFLOAT_PACK32:
  case VK_FORMAT_R8G8B8A8_SINT:
  case VK_FORMAT_R8G8B8A8_SNORM:
  case VK_FORMAT_R8G8B8A8_SRGB:
  case VK_FORMAT_R8G8B8A8_SSCALED:
  case VK_FORMAT_R8G8B8A8_UINT:
  case VK_FORMAT_R8G8B8A8_UNORM:
  case VK_FORMAT_R8G8B8A8_USCALED:
  case VK_FORMAT_B8G8R8A8_SINT:
  case VK_FORMAT_B8G8R8A8_SNORM:
  case VK_FORMAT_B8G8R8A8_SRGB:
  case VK_FORMAT_B8G8R8A8_SSCALED:
  case VK_FORMAT_B8G8R8A8_UINT:
  case VK_FORMAT_B8G8R8A8_UNORM:
  case VK_FORMAT_B8G8R8A8_USCALED:
  case VK_FORMAT_R16G16_SFLOAT:
  case VK_FORMAT_R16G16_SINT:
  case VK_FORMAT_R16G16_SNORM:
  case VK_FORMAT_R16G16_SSCALED:
  case VK_FORMAT_R16G16_UINT:
  case VK_FORMAT_R16G16_UNORM:
  case VK_FORMAT_R16G16_USCALED:
  case VK_FORMAT_R32_SFLOAT:
  case VK_FORMAT_R32_SINT:
  case VK_FORMAT_R32_UINT:
  case VK_FORMAT_D24_UNORM_S8_UINT:
  case VK_FORMAT_X8_D24_UNORM_PACK32:
  case VK_FORMAT_D32_SFLOAT:
    return 4 * size.width * size.height * size.depth;
  case VK_FORMAT_B8G8R8_SINT:
  case VK_FORMAT_B8G8R8_SNORM:
  case VK_FORMAT_B8G8R8_SRGB:
  case VK_FORMAT_B8G8R8_SSCALED:
  case VK_FORMAT_B8G8R8_UINT:
  case VK_FORMAT_B8G8R8_UNORM:
  case VK_FORMAT_B8G8R8_USCALED:
  case VK_FORMAT_R8G8B8_SINT:
  case VK_FORMAT_R8G8B8_SNORM:
  case VK_FORMAT_R8G8B8_SRGB:
  case VK_FORMAT_R8G8B8_SSCALED:
  case VK_FORMAT_R8G8B8_UINT:
  case VK_FORMAT_R8G8B8_UNORM:
  case VK_FORMAT_R8G8B8_USCALED:
  case VK_FORMAT_D16_UNORM_S8_UINT:
    return 3 * size.width * size.height * size.depth;
  case VK_FORMAT_B4G4R4A4_UNORM_PACK16:
  case VK_FORMAT_B5G5R5A1_UNORM_PACK16:
  case VK_FORMAT_B5G6R5_UNORM_PACK16:
  case VK_FORMAT_A1R5G5B5_UNORM_PACK16:
  case VK_FORMAT_R4G4B4A4_UNORM_PACK16:
  case VK_FORMAT_R5G5B5A1_UNORM_PACK16:
  case VK_FORMAT_R5G6B5_UNORM_PACK16:
  case VK_FORMAT_R8G8_SINT:
  case VK_FORMAT_R8G8_SNORM:
  case VK_FORMAT_R8G8_SRGB:
  case VK_FORMAT_R8G8_SSCALED:
  case VK_FORMAT_R8G8_UINT:
  case VK_FORMAT_R8G8_UNORM:
  case VK_FORMAT_R8G8_USCALED:
  case VK_FORMAT_R16_SFLOAT:
  case VK_FORMAT_R16_SINT:
  case VK_FORMAT_R16_SNORM:
  case VK_FORMAT_R16_SSCALED:
  case VK_FORMAT_R16_UINT:
  case VK_FORMAT_R16_UNORM:
  case VK_FORMAT_R16_USCALED:
  case VK_FORMAT_D16_UNORM:
  case VK_FORMAT_A4B4G4R4_UNORM_PACK16:
  case VK_FORMAT_A4R4G4B4_UNORM_PACK16:
    return 2 * size.width * size.height * size.depth;
  case VK_FORMAT_R4G4_UNORM_PACK8:
  case VK_FORMAT_R8_SINT:
  case VK_FORMAT_R8_SNORM:
  case VK_FORMAT_R8_SRGB:
  case VK_FORMAT_R8_SSCALED:
  case VK_FORMAT_R8_UINT:
  case VK_FORMAT_R8_UNORM:
  case VK_FORMAT_R8_USCALED:
  case VK_FORMAT_S8_UINT:
  case VK_FORMAT_CUSTOM_A8_UNORM_GITS:
    return 1 * size.width * size.height * size.depth;
  case VK_FORMAT_ASTC_10x10_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x10_UNORM_BLOCK:
  case VK_FORMAT_ASTC_10x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x5_UNORM_BLOCK:
  case VK_FORMAT_ASTC_10x6_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x6_UNORM_BLOCK:
  case VK_FORMAT_ASTC_10x8_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x8_UNORM_BLOCK:
  case VK_FORMAT_ASTC_12x10_SRGB_BLOCK:
  case VK_FORMAT_ASTC_12x10_UNORM_BLOCK:
  case VK_FORMAT_ASTC_12x12_SRGB_BLOCK:
  case VK_FORMAT_ASTC_12x12_UNORM_BLOCK:
  case VK_FORMAT_ASTC_4x4_SRGB_BLOCK:
  case VK_FORMAT_ASTC_4x4_UNORM_BLOCK:
  case VK_FORMAT_ASTC_5x4_SRGB_BLOCK:
  case VK_FORMAT_ASTC_5x4_UNORM_BLOCK:
  case VK_FORMAT_ASTC_5x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_5x5_UNORM_BLOCK:
  case VK_FORMAT_ASTC_6x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_6x5_UNORM_BLOCK:
  case VK_FORMAT_ASTC_6x6_SRGB_BLOCK:
  case VK_FORMAT_ASTC_6x6_UNORM_BLOCK:
  case VK_FORMAT_ASTC_8x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_8x5_UNORM_BLOCK:
  case VK_FORMAT_ASTC_8x6_SRGB_BLOCK:
  case VK_FORMAT_ASTC_8x6_UNORM_BLOCK:
  case VK_FORMAT_ASTC_8x8_SRGB_BLOCK:
  case VK_FORMAT_ASTC_8x8_UNORM_BLOCK:
  case VK_FORMAT_BC2_SRGB_BLOCK:
  case VK_FORMAT_BC2_UNORM_BLOCK:
  case VK_FORMAT_BC3_SRGB_BLOCK:
  case VK_FORMAT_BC3_UNORM_BLOCK:
  case VK_FORMAT_BC5_SNORM_BLOCK:
  case VK_FORMAT_BC5_UNORM_BLOCK:
  case VK_FORMAT_BC6H_SFLOAT_BLOCK:
  case VK_FORMAT_BC6H_UFLOAT_BLOCK:
  case VK_FORMAT_BC7_SRGB_BLOCK:
  case VK_FORMAT_BC7_UNORM_BLOCK:
  case VK_FORMAT_EAC_R11G11_SNORM_BLOCK:
  case VK_FORMAT_EAC_R11G11_UNORM_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK:
    return 16 * getFormatNumBlocks(format, size);
  case VK_FORMAT_BC1_RGBA_SRGB_BLOCK:
  case VK_FORMAT_BC1_RGBA_UNORM_BLOCK:
  case VK_FORMAT_BC1_RGB_SRGB_BLOCK:
  case VK_FORMAT_BC1_RGB_UNORM_BLOCK:
  case VK_FORMAT_BC4_SNORM_BLOCK:
  case VK_FORMAT_BC4_UNORM_BLOCK:
  case VK_FORMAT_EAC_R11_SNORM_BLOCK:
  case VK_FORMAT_EAC_R11_UNORM_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK:
    return 8 * getFormatNumBlocks(format, size);
  case VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG:
  case VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG:
  default:
    throw ENotSupported(EXCEPTION_MESSAGE);
  }
}

uint32_t getFormatAspectDataSize(VkFormat format, VkImageAspectFlagBits aspect, VkExtent3D size) {
  switch (aspect) {
  case VK_IMAGE_ASPECT_COLOR_BIT:
    return getFormatDataSize(format, size);

  case VK_IMAGE_ASPECT_DEPTH_BIT:
    switch (format) {
    case VK_FORMAT_D16_UNORM:
    case VK_FORMAT_D16_UNORM_S8_UINT:
      return 2 * size.width * size.height * size.depth;
    case VK_FORMAT_D32_SFLOAT:
    case VK_FORMAT_D32_SFLOAT_S8_UINT:
    case VK_FORMAT_X8_D24_UNORM_PACK32:
    case VK_FORMAT_D24_UNORM_S8_UINT:
      return 4 * size.width * size.height * size.depth;
    default:
      throw ENotSupported(EXCEPTION_MESSAGE);
    }
    break;

  case VK_IMAGE_ASPECT_STENCIL_BIT:
    switch (format) {
    case VK_FORMAT_S8_UINT:
    case VK_FORMAT_D16_UNORM_S8_UINT:
    case VK_FORMAT_D24_UNORM_S8_UINT:
    case VK_FORMAT_D32_SFLOAT_S8_UINT:
      return 1 * size.width * size.height * size.depth;
    default:
      throw ENotSupported(EXCEPTION_MESSAGE);
    }
    break;

  default:
    throw ENotSupported(EXCEPTION_MESSAGE);
  }
}

uint32_t getFormatChannelCount(VkFormat format) {
  switch (format) {
  case VK_FORMAT_R64G64B64A64_SFLOAT:
  case VK_FORMAT_R64G64B64A64_SINT:
  case VK_FORMAT_R64G64B64A64_UINT:
  case VK_FORMAT_R32G32B32A32_SFLOAT:
  case VK_FORMAT_R32G32B32A32_SINT:
  case VK_FORMAT_R32G32B32A32_UINT:
  case VK_FORMAT_R16G16B16A16_SFLOAT:
  case VK_FORMAT_R16G16B16A16_SINT:
  case VK_FORMAT_R16G16B16A16_SNORM:
  case VK_FORMAT_R16G16B16A16_SSCALED:
  case VK_FORMAT_R16G16B16A16_UINT:
  case VK_FORMAT_R16G16B16A16_UNORM:
  case VK_FORMAT_R16G16B16A16_USCALED:
  case VK_FORMAT_A2B10G10R10_SINT_PACK32:
  case VK_FORMAT_A2B10G10R10_SNORM_PACK32:
  case VK_FORMAT_A2B10G10R10_SSCALED_PACK32:
  case VK_FORMAT_A2B10G10R10_UINT_PACK32:
  case VK_FORMAT_A2B10G10R10_UNORM_PACK32:
  case VK_FORMAT_A2B10G10R10_USCALED_PACK32:
  case VK_FORMAT_A2R10G10B10_SINT_PACK32:
  case VK_FORMAT_A2R10G10B10_SNORM_PACK32:
  case VK_FORMAT_A2R10G10B10_SSCALED_PACK32:
  case VK_FORMAT_A2R10G10B10_UINT_PACK32:
  case VK_FORMAT_A2R10G10B10_UNORM_PACK32:
  case VK_FORMAT_A2R10G10B10_USCALED_PACK32:
  case VK_FORMAT_A8B8G8R8_SINT_PACK32:
  case VK_FORMAT_A8B8G8R8_SNORM_PACK32:
  case VK_FORMAT_A8B8G8R8_SRGB_PACK32:
  case VK_FORMAT_A8B8G8R8_SSCALED_PACK32:
  case VK_FORMAT_A8B8G8R8_UINT_PACK32:
  case VK_FORMAT_A8B8G8R8_UNORM_PACK32:
  case VK_FORMAT_A8B8G8R8_USCALED_PACK32:
  case VK_FORMAT_B8G8R8A8_SINT:
  case VK_FORMAT_B8G8R8A8_SNORM:
  case VK_FORMAT_B8G8R8A8_SRGB:
  case VK_FORMAT_B8G8R8A8_SSCALED:
  case VK_FORMAT_B8G8R8A8_UINT:
  case VK_FORMAT_B8G8R8A8_UNORM:
  case VK_FORMAT_B8G8R8A8_USCALED:
  case VK_FORMAT_R8G8B8A8_SINT:
  case VK_FORMAT_R8G8B8A8_SNORM:
  case VK_FORMAT_R8G8B8A8_SRGB:
  case VK_FORMAT_R8G8B8A8_SSCALED:
  case VK_FORMAT_R8G8B8A8_UINT:
  case VK_FORMAT_R8G8B8A8_UNORM:
  case VK_FORMAT_R8G8B8A8_USCALED:
  case VK_FORMAT_A1R5G5B5_UNORM_PACK16:
  case VK_FORMAT_B5G5R5A1_UNORM_PACK16:
  case VK_FORMAT_R5G5B5A1_UNORM_PACK16:
  case VK_FORMAT_B4G4R4A4_UNORM_PACK16:
  case VK_FORMAT_R4G4B4A4_UNORM_PACK16:
  case VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK:
  case VK_FORMAT_BC1_RGBA_SRGB_BLOCK:
  case VK_FORMAT_BC1_RGBA_UNORM_BLOCK:
  case VK_FORMAT_A4B4G4R4_UNORM_PACK16:
  case VK_FORMAT_A4R4G4B4_UNORM_PACK16:
    return 4;
  case VK_FORMAT_R64G64B64_SFLOAT:
  case VK_FORMAT_R64G64B64_SINT:
  case VK_FORMAT_R64G64B64_UINT:
  case VK_FORMAT_R32G32B32_SFLOAT:
  case VK_FORMAT_R32G32B32_SINT:
  case VK_FORMAT_R32G32B32_UINT:
  case VK_FORMAT_B10G11R11_UFLOAT_PACK32:
  case VK_FORMAT_R16G16B16_SFLOAT:
  case VK_FORMAT_R16G16B16_SINT:
  case VK_FORMAT_R16G16B16_SNORM:
  case VK_FORMAT_R16G16B16_SSCALED:
  case VK_FORMAT_R16G16B16_UINT:
  case VK_FORMAT_R16G16B16_UNORM:
  case VK_FORMAT_R16G16B16_USCALED:
  case VK_FORMAT_E5B9G9R9_UFLOAT_PACK32:
  case VK_FORMAT_B8G8R8_SINT:
  case VK_FORMAT_B8G8R8_SNORM:
  case VK_FORMAT_B8G8R8_SRGB:
  case VK_FORMAT_B8G8R8_SSCALED:
  case VK_FORMAT_B8G8R8_UINT:
  case VK_FORMAT_B8G8R8_UNORM:
  case VK_FORMAT_B8G8R8_USCALED:
  case VK_FORMAT_R8G8B8_SINT:
  case VK_FORMAT_R8G8B8_SNORM:
  case VK_FORMAT_R8G8B8_SRGB:
  case VK_FORMAT_R8G8B8_SSCALED:
  case VK_FORMAT_R8G8B8_UINT:
  case VK_FORMAT_R8G8B8_UNORM:
  case VK_FORMAT_R8G8B8_USCALED:
  case VK_FORMAT_B5G6R5_UNORM_PACK16:
  case VK_FORMAT_R5G6B5_UNORM_PACK16:
  case VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK:
  case VK_FORMAT_BC1_RGB_SRGB_BLOCK:
  case VK_FORMAT_BC1_RGB_UNORM_BLOCK:
    return 3;
  case VK_FORMAT_R64G64_SFLOAT:
  case VK_FORMAT_R64G64_SINT:
  case VK_FORMAT_R64G64_UINT:
  case VK_FORMAT_R32G32_SFLOAT:
  case VK_FORMAT_R32G32_SINT:
  case VK_FORMAT_R32G32_UINT:
  case VK_FORMAT_R16G16_SFLOAT:
  case VK_FORMAT_R16G16_SINT:
  case VK_FORMAT_R16G16_SNORM:
  case VK_FORMAT_R16G16_SSCALED:
  case VK_FORMAT_R16G16_UINT:
  case VK_FORMAT_R16G16_UNORM:
  case VK_FORMAT_R16G16_USCALED:
  case VK_FORMAT_EAC_R11G11_SNORM_BLOCK:
  case VK_FORMAT_EAC_R11G11_UNORM_BLOCK:
  case VK_FORMAT_R8G8_SINT:
  case VK_FORMAT_R8G8_SNORM:
  case VK_FORMAT_R8G8_SRGB:
  case VK_FORMAT_R8G8_SSCALED:
  case VK_FORMAT_R8G8_UINT:
  case VK_FORMAT_R8G8_UNORM:
  case VK_FORMAT_R8G8_USCALED:
  case VK_FORMAT_R4G4_UNORM_PACK8:
  case VK_FORMAT_D32_SFLOAT_S8_UINT:
  case VK_FORMAT_D24_UNORM_S8_UINT:
  case VK_FORMAT_D16_UNORM_S8_UINT:
    return 2;
  case VK_FORMAT_R64_SFLOAT:
  case VK_FORMAT_R64_SINT:
  case VK_FORMAT_R64_UINT:
  case VK_FORMAT_R32_SFLOAT:
  case VK_FORMAT_R32_SINT:
  case VK_FORMAT_R32_UINT:
  case VK_FORMAT_R16_SFLOAT:
  case VK_FORMAT_R16_SINT:
  case VK_FORMAT_R16_SNORM:
  case VK_FORMAT_R16_SSCALED:
  case VK_FORMAT_R16_UINT:
  case VK_FORMAT_R16_UNORM:
  case VK_FORMAT_R16_USCALED:
  case VK_FORMAT_EAC_R11_SNORM_BLOCK:
  case VK_FORMAT_EAC_R11_UNORM_BLOCK:
  case VK_FORMAT_R8_SINT:
  case VK_FORMAT_R8_SNORM:
  case VK_FORMAT_R8_SRGB:
  case VK_FORMAT_R8_SSCALED:
  case VK_FORMAT_R8_UINT:
  case VK_FORMAT_R8_UNORM:
  case VK_FORMAT_R8_USCALED:
  case VK_FORMAT_D32_SFLOAT:
  case VK_FORMAT_X8_D24_UNORM_PACK32:
  case VK_FORMAT_D16_UNORM:
  case VK_FORMAT_S8_UINT:
  case VK_FORMAT_CUSTOM_A8_UNORM_GITS:
    return 1;
  //case VK_FORMAT_ASTC_10x10_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_10x10_UNORM_BLOCK:
  //case VK_FORMAT_ASTC_10x5_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_10x5_UNORM_BLOCK:
  //case VK_FORMAT_ASTC_10x6_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_10x6_UNORM_BLOCK:
  //case VK_FORMAT_ASTC_10x8_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_10x8_UNORM_BLOCK:
  //case VK_FORMAT_ASTC_12x10_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_12x10_UNORM_BLOCK:
  //case VK_FORMAT_ASTC_12x12_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_12x12_UNORM_BLOCK:
  //case VK_FORMAT_ASTC_4x4_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_4x4_UNORM_BLOCK:
  //case VK_FORMAT_ASTC_5x4_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_5x4_UNORM_BLOCK:
  //case VK_FORMAT_ASTC_5x5_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_5x5_UNORM_BLOCK:
  //case VK_FORMAT_ASTC_6x5_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_6x5_UNORM_BLOCK:
  //case VK_FORMAT_ASTC_6x6_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_6x6_UNORM_BLOCK:
  //case VK_FORMAT_ASTC_8x5_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_8x5_UNORM_BLOCK:
  //case VK_FORMAT_ASTC_8x6_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_8x6_UNORM_BLOCK:
  //case VK_FORMAT_ASTC_8x8_SRGB_BLOCK:
  //case VK_FORMAT_ASTC_8x8_UNORM_BLOCK:
  //case VK_FORMAT_BC2_SRGB_BLOCK:
  //case VK_FORMAT_BC2_UNORM_BLOCK:
  //case VK_FORMAT_BC3_SRGB_BLOCK:
  //case VK_FORMAT_BC3_UNORM_BLOCK:
  //case VK_FORMAT_BC4_SNORM_BLOCK:
  //case VK_FORMAT_BC4_UNORM_BLOCK:
  //case VK_FORMAT_BC5_SNORM_BLOCK:
  //case VK_FORMAT_BC5_UNORM_BLOCK:
  //case VK_FORMAT_BC6H_SFLOAT_BLOCK:
  //case VK_FORMAT_BC6H_UFLOAT_BLOCK:
  //case VK_FORMAT_BC7_SRGB_BLOCK:
  //case VK_FORMAT_BC7_UNORM_BLOCK:
  //case VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG:
  //case VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG:
  //case VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG:
  //case VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG:
  //case VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG:
  //case VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG:
  //case VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG:
  //case VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG:
  default:
    throw ENotSupported(EXCEPTION_MESSAGE);
  }
}

VkImageAspectFlags getFormatAspectFlags(VkFormat format) {
  switch (format) {
  case VK_FORMAT_R64G64B64A64_SFLOAT:
  case VK_FORMAT_R64G64B64A64_SINT:
  case VK_FORMAT_R64G64B64A64_UINT:
  case VK_FORMAT_R32G32B32A32_SFLOAT:
  case VK_FORMAT_R32G32B32A32_SINT:
  case VK_FORMAT_R32G32B32A32_UINT:
  case VK_FORMAT_R16G16B16A16_SFLOAT:
  case VK_FORMAT_R16G16B16A16_SINT:
  case VK_FORMAT_R16G16B16A16_SNORM:
  case VK_FORMAT_R16G16B16A16_SSCALED:
  case VK_FORMAT_R16G16B16A16_UINT:
  case VK_FORMAT_R16G16B16A16_UNORM:
  case VK_FORMAT_R16G16B16A16_USCALED:
  case VK_FORMAT_A2B10G10R10_SINT_PACK32:
  case VK_FORMAT_A2B10G10R10_SNORM_PACK32:
  case VK_FORMAT_A2B10G10R10_SSCALED_PACK32:
  case VK_FORMAT_A2B10G10R10_UINT_PACK32:
  case VK_FORMAT_A2B10G10R10_UNORM_PACK32:
  case VK_FORMAT_A2B10G10R10_USCALED_PACK32:
  case VK_FORMAT_A2R10G10B10_SINT_PACK32:
  case VK_FORMAT_A2R10G10B10_SNORM_PACK32:
  case VK_FORMAT_A2R10G10B10_SSCALED_PACK32:
  case VK_FORMAT_A2R10G10B10_UINT_PACK32:
  case VK_FORMAT_A2R10G10B10_UNORM_PACK32:
  case VK_FORMAT_A2R10G10B10_USCALED_PACK32:
  case VK_FORMAT_A8B8G8R8_SINT_PACK32:
  case VK_FORMAT_A8B8G8R8_SNORM_PACK32:
  case VK_FORMAT_A8B8G8R8_SRGB_PACK32:
  case VK_FORMAT_A8B8G8R8_SSCALED_PACK32:
  case VK_FORMAT_A8B8G8R8_UINT_PACK32:
  case VK_FORMAT_A8B8G8R8_UNORM_PACK32:
  case VK_FORMAT_A8B8G8R8_USCALED_PACK32:
  case VK_FORMAT_B8G8R8A8_SINT:
  case VK_FORMAT_B8G8R8A8_SNORM:
  case VK_FORMAT_B8G8R8A8_SRGB:
  case VK_FORMAT_B8G8R8A8_SSCALED:
  case VK_FORMAT_B8G8R8A8_UINT:
  case VK_FORMAT_B8G8R8A8_UNORM:
  case VK_FORMAT_B8G8R8A8_USCALED:
  case VK_FORMAT_R8G8B8A8_SINT:
  case VK_FORMAT_R8G8B8A8_SNORM:
  case VK_FORMAT_R8G8B8A8_SRGB:
  case VK_FORMAT_R8G8B8A8_SSCALED:
  case VK_FORMAT_R8G8B8A8_UINT:
  case VK_FORMAT_R8G8B8A8_UNORM:
  case VK_FORMAT_R8G8B8A8_USCALED:
  case VK_FORMAT_A1R5G5B5_UNORM_PACK16:
  case VK_FORMAT_B5G5R5A1_UNORM_PACK16:
  case VK_FORMAT_R5G5B5A1_UNORM_PACK16:
  case VK_FORMAT_B4G4R4A4_UNORM_PACK16:
  case VK_FORMAT_R4G4B4A4_UNORM_PACK16:
  case VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK:
  case VK_FORMAT_BC1_RGBA_SRGB_BLOCK:
  case VK_FORMAT_BC1_RGBA_UNORM_BLOCK:
  case VK_FORMAT_R64G64B64_SFLOAT:
  case VK_FORMAT_R64G64B64_SINT:
  case VK_FORMAT_R64G64B64_UINT:
  case VK_FORMAT_R32G32B32_SFLOAT:
  case VK_FORMAT_R32G32B32_SINT:
  case VK_FORMAT_R32G32B32_UINT:
  case VK_FORMAT_B10G11R11_UFLOAT_PACK32:
  case VK_FORMAT_R16G16B16_SFLOAT:
  case VK_FORMAT_R16G16B16_SINT:
  case VK_FORMAT_R16G16B16_SNORM:
  case VK_FORMAT_R16G16B16_SSCALED:
  case VK_FORMAT_R16G16B16_UINT:
  case VK_FORMAT_R16G16B16_UNORM:
  case VK_FORMAT_R16G16B16_USCALED:
  case VK_FORMAT_E5B9G9R9_UFLOAT_PACK32:
  case VK_FORMAT_B8G8R8_SINT:
  case VK_FORMAT_B8G8R8_SNORM:
  case VK_FORMAT_B8G8R8_SRGB:
  case VK_FORMAT_B8G8R8_SSCALED:
  case VK_FORMAT_B8G8R8_UINT:
  case VK_FORMAT_B8G8R8_UNORM:
  case VK_FORMAT_B8G8R8_USCALED:
  case VK_FORMAT_R8G8B8_SINT:
  case VK_FORMAT_R8G8B8_SNORM:
  case VK_FORMAT_R8G8B8_SRGB:
  case VK_FORMAT_R8G8B8_SSCALED:
  case VK_FORMAT_R8G8B8_UINT:
  case VK_FORMAT_R8G8B8_UNORM:
  case VK_FORMAT_R8G8B8_USCALED:
  case VK_FORMAT_B5G6R5_UNORM_PACK16:
  case VK_FORMAT_R5G6B5_UNORM_PACK16:
  case VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK:
  case VK_FORMAT_BC1_RGB_SRGB_BLOCK:
  case VK_FORMAT_BC1_RGB_UNORM_BLOCK:
  case VK_FORMAT_R64G64_SFLOAT:
  case VK_FORMAT_R64G64_SINT:
  case VK_FORMAT_R64G64_UINT:
  case VK_FORMAT_R32G32_SFLOAT:
  case VK_FORMAT_R32G32_SINT:
  case VK_FORMAT_R32G32_UINT:
  case VK_FORMAT_R16G16_SFLOAT:
  case VK_FORMAT_R16G16_SINT:
  case VK_FORMAT_R16G16_SNORM:
  case VK_FORMAT_R16G16_SSCALED:
  case VK_FORMAT_R16G16_UINT:
  case VK_FORMAT_R16G16_UNORM:
  case VK_FORMAT_R16G16_USCALED:
  case VK_FORMAT_EAC_R11G11_SNORM_BLOCK:
  case VK_FORMAT_EAC_R11G11_UNORM_BLOCK:
  case VK_FORMAT_R8G8_SINT:
  case VK_FORMAT_R8G8_SNORM:
  case VK_FORMAT_R8G8_SRGB:
  case VK_FORMAT_R8G8_SSCALED:
  case VK_FORMAT_R8G8_UINT:
  case VK_FORMAT_R8G8_UNORM:
  case VK_FORMAT_R8G8_USCALED:
  case VK_FORMAT_R4G4_UNORM_PACK8:
  case VK_FORMAT_R64_SFLOAT:
  case VK_FORMAT_R64_SINT:
  case VK_FORMAT_R64_UINT:
  case VK_FORMAT_R32_SFLOAT:
  case VK_FORMAT_R32_SINT:
  case VK_FORMAT_R32_UINT:
  case VK_FORMAT_R16_SFLOAT:
  case VK_FORMAT_R16_SINT:
  case VK_FORMAT_R16_SNORM:
  case VK_FORMAT_R16_SSCALED:
  case VK_FORMAT_R16_UINT:
  case VK_FORMAT_R16_UNORM:
  case VK_FORMAT_R16_USCALED:
  case VK_FORMAT_EAC_R11_SNORM_BLOCK:
  case VK_FORMAT_EAC_R11_UNORM_BLOCK:
  case VK_FORMAT_R8_SINT:
  case VK_FORMAT_R8_SNORM:
  case VK_FORMAT_R8_SRGB:
  case VK_FORMAT_R8_SSCALED:
  case VK_FORMAT_R8_UINT:
  case VK_FORMAT_R8_UNORM:
  case VK_FORMAT_R8_USCALED:
  case VK_FORMAT_ASTC_10x10_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x10_UNORM_BLOCK:
  case VK_FORMAT_ASTC_10x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x5_UNORM_BLOCK:
  case VK_FORMAT_ASTC_10x6_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x6_UNORM_BLOCK:
  case VK_FORMAT_ASTC_10x8_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x8_UNORM_BLOCK:
  case VK_FORMAT_ASTC_12x10_SRGB_BLOCK:
  case VK_FORMAT_ASTC_12x10_UNORM_BLOCK:
  case VK_FORMAT_ASTC_12x12_SRGB_BLOCK:
  case VK_FORMAT_ASTC_12x12_UNORM_BLOCK:
  case VK_FORMAT_ASTC_4x4_SRGB_BLOCK:
  case VK_FORMAT_ASTC_4x4_UNORM_BLOCK:
  case VK_FORMAT_ASTC_5x4_SRGB_BLOCK:
  case VK_FORMAT_ASTC_5x4_UNORM_BLOCK:
  case VK_FORMAT_ASTC_5x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_5x5_UNORM_BLOCK:
  case VK_FORMAT_ASTC_6x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_6x5_UNORM_BLOCK:
  case VK_FORMAT_ASTC_6x6_SRGB_BLOCK:
  case VK_FORMAT_ASTC_6x6_UNORM_BLOCK:
  case VK_FORMAT_ASTC_8x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_8x5_UNORM_BLOCK:
  case VK_FORMAT_ASTC_8x6_SRGB_BLOCK:
  case VK_FORMAT_ASTC_8x6_UNORM_BLOCK:
  case VK_FORMAT_ASTC_8x8_SRGB_BLOCK:
  case VK_FORMAT_ASTC_8x8_UNORM_BLOCK:
  case VK_FORMAT_BC2_SRGB_BLOCK:
  case VK_FORMAT_BC2_UNORM_BLOCK:
  case VK_FORMAT_BC3_SRGB_BLOCK:
  case VK_FORMAT_BC3_UNORM_BLOCK:
  case VK_FORMAT_BC4_SNORM_BLOCK:
  case VK_FORMAT_BC4_UNORM_BLOCK:
  case VK_FORMAT_BC5_SNORM_BLOCK:
  case VK_FORMAT_BC5_UNORM_BLOCK:
  case VK_FORMAT_BC6H_SFLOAT_BLOCK:
  case VK_FORMAT_BC6H_UFLOAT_BLOCK:
  case VK_FORMAT_BC7_SRGB_BLOCK:
  case VK_FORMAT_BC7_UNORM_BLOCK:
  case VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG:
  case VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG:
  case VK_FORMAT_A4B4G4R4_UNORM_PACK16:
  case VK_FORMAT_A4R4G4B4_UNORM_PACK16:
  case VK_FORMAT_CUSTOM_A8_UNORM_GITS:
    return VK_IMAGE_ASPECT_COLOR_BIT;
  case VK_FORMAT_D32_SFLOAT_S8_UINT:
  case VK_FORMAT_D24_UNORM_S8_UINT:
  case VK_FORMAT_D16_UNORM_S8_UINT:
    return VK_IMAGE_ASPECT_DEPTH_BIT | VK_IMAGE_ASPECT_STENCIL_BIT;
  case VK_FORMAT_D32_SFLOAT:
  case VK_FORMAT_X8_D24_UNORM_PACK32:
  case VK_FORMAT_D16_UNORM:
    return VK_IMAGE_ASPECT_DEPTH_BIT;
  case VK_FORMAT_S8_UINT:
    return VK_IMAGE_ASPECT_STENCIL_BIT;
  default:
    throw ENotSupported(EXCEPTION_MESSAGE);
  }
}

VkAccessFlags getLayoutAccessFlags(VkImageLayout layout) {
  switch (layout) {
  default:
  case VK_IMAGE_LAYOUT_UNDEFINED:
    return 0;
  case VK_IMAGE_LAYOUT_GENERAL:
    return 0x7ffff;
  case VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL:
    return VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT;
  case VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL:
    return VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT;
  case VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL:
    return VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT;
  case VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL:
    return VK_ACCESS_SHADER_READ_BIT;
  case VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL:
    return VK_ACCESS_TRANSFER_READ_BIT;
  case VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL:
    return VK_ACCESS_TRANSFER_WRITE_BIT;
  case VK_IMAGE_LAYOUT_PREINITIALIZED:
    return VK_ACCESS_HOST_WRITE_BIT;
  case VK_IMAGE_LAYOUT_PRESENT_SRC_KHR:
  case VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR:
    return VK_ACCESS_MEMORY_READ_BIT;
  case VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL:
  case VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL:
    return VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT |
           VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT;
  }
}

uint32_t getIndexElementSize(VkIndexType indexType) {
  switch (indexType) {
  default:
  case VK_INDEX_TYPE_NONE_KHR:
    return 0;
  case VK_INDEX_TYPE_UINT8_KHR:
    return 1;
  case VK_INDEX_TYPE_UINT16:
    return 2;
  case VK_INDEX_TYPE_UINT32:
    return 4;
  }
}

bool isFormatFloat(VkFormat format) {
  switch (format) {
  case VK_FORMAT_R64G64B64A64_SFLOAT:
  case VK_FORMAT_R64G64B64_SFLOAT:
  case VK_FORMAT_R32G32B32A32_SFLOAT:
  case VK_FORMAT_R64G64_SFLOAT:
  case VK_FORMAT_R32G32B32_SFLOAT:
  case VK_FORMAT_R16G16B16A16_SFLOAT:
  case VK_FORMAT_R32G32_SFLOAT:
  case VK_FORMAT_R64_SFLOAT:
  case VK_FORMAT_R16G16B16_SFLOAT:
  case VK_FORMAT_B10G11R11_UFLOAT_PACK32:
  case VK_FORMAT_E5B9G9R9_UFLOAT_PACK32:
  case VK_FORMAT_R16G16_SFLOAT:
  case VK_FORMAT_R32_SFLOAT:
  case VK_FORMAT_D32_SFLOAT:
  case VK_FORMAT_D32_SFLOAT_S8_UINT:
  case VK_FORMAT_R16_SFLOAT:
  case VK_FORMAT_BC6H_SFLOAT_BLOCK:
  case VK_FORMAT_BC6H_UFLOAT_BLOCK:
    return true;
  default:
    return false;
  }
}

bool isFormatCompressed(VkFormat format) {
  switch (format) {
  case VK_FORMAT_ASTC_10x10_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x10_UNORM_BLOCK:
  case VK_FORMAT_ASTC_10x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x5_UNORM_BLOCK:
  case VK_FORMAT_ASTC_10x6_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x6_UNORM_BLOCK:
  case VK_FORMAT_ASTC_10x8_SRGB_BLOCK:
  case VK_FORMAT_ASTC_10x8_UNORM_BLOCK:
  case VK_FORMAT_ASTC_12x10_SRGB_BLOCK:
  case VK_FORMAT_ASTC_12x10_UNORM_BLOCK:
  case VK_FORMAT_ASTC_12x12_SRGB_BLOCK:
  case VK_FORMAT_ASTC_12x12_UNORM_BLOCK:
  case VK_FORMAT_ASTC_4x4_SRGB_BLOCK:
  case VK_FORMAT_ASTC_4x4_UNORM_BLOCK:
  case VK_FORMAT_ASTC_5x4_SRGB_BLOCK:
  case VK_FORMAT_ASTC_5x4_UNORM_BLOCK:
  case VK_FORMAT_ASTC_5x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_5x5_UNORM_BLOCK:
  case VK_FORMAT_ASTC_6x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_6x5_UNORM_BLOCK:
  case VK_FORMAT_ASTC_6x6_SRGB_BLOCK:
  case VK_FORMAT_ASTC_6x6_UNORM_BLOCK:
  case VK_FORMAT_ASTC_8x5_SRGB_BLOCK:
  case VK_FORMAT_ASTC_8x5_UNORM_BLOCK:
  case VK_FORMAT_ASTC_8x6_SRGB_BLOCK:
  case VK_FORMAT_ASTC_8x6_UNORM_BLOCK:
  case VK_FORMAT_ASTC_8x8_SRGB_BLOCK:
  case VK_FORMAT_ASTC_8x8_UNORM_BLOCK:
  case VK_FORMAT_BC1_RGBA_SRGB_BLOCK:
  case VK_FORMAT_BC1_RGBA_UNORM_BLOCK:
  case VK_FORMAT_BC1_RGB_SRGB_BLOCK:
  case VK_FORMAT_BC1_RGB_UNORM_BLOCK:
  case VK_FORMAT_BC2_SRGB_BLOCK:
  case VK_FORMAT_BC2_UNORM_BLOCK:
  case VK_FORMAT_BC3_SRGB_BLOCK:
  case VK_FORMAT_BC3_UNORM_BLOCK:
  case VK_FORMAT_BC4_SNORM_BLOCK:
  case VK_FORMAT_BC4_UNORM_BLOCK:
  case VK_FORMAT_BC5_SNORM_BLOCK:
  case VK_FORMAT_BC5_UNORM_BLOCK:
  case VK_FORMAT_BC6H_SFLOAT_BLOCK:
  case VK_FORMAT_BC6H_UFLOAT_BLOCK:
  case VK_FORMAT_BC7_SRGB_BLOCK:
  case VK_FORMAT_BC7_UNORM_BLOCK:
  case VK_FORMAT_EAC_R11G11_SNORM_BLOCK:
  case VK_FORMAT_EAC_R11G11_UNORM_BLOCK:
  case VK_FORMAT_EAC_R11_SNORM_BLOCK:
  case VK_FORMAT_EAC_R11_UNORM_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK:
  case VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK:
  case VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG:
  case VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG:
  case VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG:
    return true;
  default:
    return false;
  }
}

const void* ignoreLoaderSpecificStructureTypes(const void* pNext) {
#ifdef GITS_PLATFORM_WINDOWS
  // Added try-catch clause because some applications provide trash/incorrect pointer data
  __try {
#endif

    bool found = false;
    while (!found && (pNext != nullptr)) {
      switch (*(VkStructureType*)pNext) {
      case VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO:
      case VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO:
      case VK_STRUCTURE_TYPE_WIN32_INSTANCE_CREATE_INFO_INTEL:
      case VK_STRUCTURE_TYPE_WIN32_DEVICE_CREATE_INFO_INTEL:
      case VK_STRUCTURE_TYPE_WIN32_IMAGE_CREATE_INFO_INTEL:
      case VK_STRUCTURE_TYPE_WIN32_IMAGE_CREATE_INFO_REFLECTION_INTEL:
      case VK_STRUCTURE_TYPE_GET_RESOURCE_LAYOUT_INTEL:
      case VK_STRUCTURE_TYPE_WIN32_BUFFER_CREATE_INFO_INTEL:
      case VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_BUFFER_VIEW_INFO_INTEL:
      case VK_STRUCTURE_TYPE_IMPORT_WIN32_HANDLES_INTEL:
      case VK_STRUCTURE_TYPE_WIN32_RESIDENCY_INFO_INTEL:
      case VK_STRUCTURE_TYPE_WIN32_SEMAPHORE_CREATE_INFO_REFLECTION_INTEL:
      case VK_STRUCTURE_TYPE_FRAGMENT_SHADER_WRAP_COORDINATES_INTEL:
      case VK_STRUCTURE_TYPE_WIN32_RESOURCE_INFO_INTEL:
      case VK_STRUCTURE_TYPE_FORCED_SAMPLE_COUNT_INTEL:
      case VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_FLAGS_INTEL:
      case VK_STRUCTURE_TYPE_IMAGE_SAMPLE_PATTERN_INFO_INTEL:
      case VK_STRUCTURE_TYPE_WIN32_RESOURCE_REFLECTION_INFO_INTEL:
      case VK_STRUCTURE_TYPE_MULTISAMPLE_STATE_CREATE_INFO_INTEL:
      case VK_STRUCTURE_TYPE_TRIM_RESIDENCY_SET_INTEL:
      case VK_STRUCTURE_TYPE_ROTATERESOURCE_IDENTITIES_INTEL:
      case VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO_FLAGS_INTEL:
      case VK_STRUCTURE_TYPE_WIN32_MEDIA_CALLBACKS_INTEL:
      case VK_STRUCTURE_TYPE_PIPELINE_STATISTICS_CONTROL_INTEL:
      case VK_STRUCTURE_TYPE_PRIMARY_COMMAND_BUFFER_INHERITANCE_INFO_INTEL:
      case VK_STRUCTURE_TYPE_IMAGE_SAMPLE_DEPTH_IN_COPY_OPERATIONS_ONLY_INFO_INTEL:
      case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUI_PROPERTIES_INTEL:
      case VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO_2_INTEL:
      case VK_STRUCTURE_TYPE_RESOLVE_IMAGE_COMPRESSION_INTEL:
      case VK_STRUCTURE_TYPE_RESOLVE_IMAGE_COMPRESSION_ON_PRESENT_INTEL:
      case VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO_3_INTEL:
      case VK_STRUCTURE_TYPE_SAMPLE_CHROMA_KEY_CREATE_INFO_INTEL:
      case VK_STRUCTURE_TYPE_SHADER_DXBC_HASH_INTEL:
      case VK_STRUCTURE_TYPE_QUERY_LOW_LATENCY_SUPPORT_NV:
      case VK_STRUCTURE_TYPE_STRUCT_STORAGE_POINTER_GITS:
        pNext = ((const VkBaseInStructure*)pNext)->pNext;
        break;
      default:
        found = true;
        break;
      }
    }

#ifdef GITS_PLATFORM_WINDOWS
  } __except (1) { // from excpt.h: #define EXCEPTION_EXECUTE_HANDLER 1
    return nullptr;
  }
#endif

  return pNext;
}

bool isSamplerDescriptor(VkDescriptorType descriptorType) {
  if ((descriptorType == VK_DESCRIPTOR_TYPE_SAMPLER) ||
      (descriptorType == VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER)) {
    return true;
  } else {
    return false;
  }
}

bool isImageDescriptor(VkDescriptorType descriptorType) {
  if ((descriptorType == VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER) ||
      (descriptorType == VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE) ||
      (descriptorType == VK_DESCRIPTOR_TYPE_STORAGE_IMAGE) ||
      (descriptorType == VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT)) {
    return true;
  } else {
    return false;
  }
}

bool isBufferDescriptor(VkDescriptorType descriptorType) {
  if ((descriptorType == VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER) ||
      (descriptorType == VK_DESCRIPTOR_TYPE_STORAGE_BUFFER) ||
      (descriptorType == VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC) ||
      (descriptorType == VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC)) {
    return true;
  } else {
    return false;
  }
}

bool isTexelBufferDescriptor(VkDescriptorType descriptorType) {
  if ((descriptorType == VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER) ||
      (descriptorType == VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER)) {
    return true;
  } else {
    return false;
  }
}

std::vector<uint32_t> getRayTracingArraySizes(
    uint32_t count, VkAccelerationStructureBuildGeometryInfoKHR const* pInfos) {
  std::vector<uint32_t> sizes(count);
  for (uint32_t i = 0; i < count; ++i) {
    sizes[i] = pInfos[i].geometryCount;
  }
  return sizes;
}

VkCommandExecutionSideGITS getCommandExecutionSide(VkCommandBuffer commandBuffer) {
  if (commandBuffer != VK_NULL_HANDLE) {
    return VK_COMMAND_EXECUTION_SIDE_DEVICE_GITS;
  } else {
    return VK_COMMAND_EXECUTION_SIDE_HOST_GITS;
  }
}

const void* getPNextStructure(const void* pNext, VkStructureType structureType) {
  const VkBaseInStructure* pNextPtr = (const VkBaseInStructure*)pNext;
  while (pNextPtr != nullptr) {
    if (pNextPtr->sType == structureType) {
      break;
    }
    pNextPtr = (const VkBaseInStructure*)pNextPtr->pNext;
  }
  return pNextPtr;
}

bool isImagePresentable(const VkImageCreateInfo* pCreateInfo) {
  bool createInfoINTEL =
      getPNextStructure(pCreateInfo->pNext, VK_STRUCTURE_TYPE_WIN32_IMAGE_CREATE_INFO_INTEL) !=
      nullptr;
  bool colorAttachmentUsage = isBitSet(pCreateInfo->usage, VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT);
  bool format = (pCreateInfo->format == VK_FORMAT_R8G8B8A8_UNORM) ||
                (pCreateInfo->format == VK_FORMAT_R8G8B8A8_SRGB) ||
                (pCreateInfo->format == VK_FORMAT_B8G8R8A8_UNORM) ||
                (pCreateInfo->format == VK_FORMAT_B8G8R8A8_SRGB);

  return createInfoINTEL && colorAttachmentUsage && format;
}

} // namespace Vulkan
} // namespace gits
