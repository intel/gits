// ===================== begin_copyright_notice ============================
//
// Copyright (C) 2023-2025 Intel Corporation
//
// SPDX-License-Identifier: MIT
//
// ===================== end_copyright_notice ==============================

//
// FILE AUTO-GENERATED BY THE GITS CODE GENERATOR. DO NOT MODIFY DIRECTLY.
// GENERATED ON: 2025-03-04 11:48:11.792848
//

#pragma once

#include "command.h"
#include "toStr.h"

namespace gits {
namespace DirectX {

std::string toStr(const wchar_t* s) {
  // Convert wide string to narrow string by truncating the characters
  // Note: Will not work for non-ASCII characters
  std::wstring wStr = s;
  return std::string(wStr.begin(), wStr.end());
}

std::string callKeyToStr(unsigned key) {
  std::string result;
  if (key & Command::stateRestoreKeyMask) {
    result += 'S';
    key &= ~Command::stateRestoreKeyMask;
  } else if (key & Command::executionSerializationKeyMask) {
    result += 'E';
    key &= ~Command::executionSerializationKeyMask;
  }
  return result + std::to_string(key);
}

std::wstring callKeyToWStr(unsigned key) {
  std::string commandKey = callKeyToStr(key);
  return std::wstring(commandKey.begin(), commandKey.end());
}

} // namespace DirectX
} // namespace gits
